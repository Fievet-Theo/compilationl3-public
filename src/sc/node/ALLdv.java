/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ALLdv extends PLdv
{
    private PDv _dv_;
    private TVir _vir_;
    private PLdv _ldv_;

    public ALLdv()
    {
        // Constructor
    }

    public ALLdv(
        @SuppressWarnings("hiding") PDv _dv_,
        @SuppressWarnings("hiding") TVir _vir_,
        @SuppressWarnings("hiding") PLdv _ldv_)
    {
        // Constructor
        setDv(_dv_);

        setVir(_vir_);

        setLdv(_ldv_);

    }

    @Override
    public Object clone()
    {
        return new ALLdv(
            cloneNode(this._dv_),
            cloneNode(this._vir_),
            cloneNode(this._ldv_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALLdv(this);
    }

    public PDv getDv()
    {
        return this._dv_;
    }

    public void setDv(PDv node)
    {
        if(this._dv_ != null)
        {
            this._dv_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dv_ = node;
    }

    public TVir getVir()
    {
        return this._vir_;
    }

    public void setVir(TVir node)
    {
        if(this._vir_ != null)
        {
            this._vir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._vir_ = node;
    }

    public PLdv getLdv()
    {
        return this._ldv_;
    }

    public void setLdv(PLdv node)
    {
        if(this._ldv_ != null)
        {
            this._ldv_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ldv_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._dv_)
            + toString(this._vir_)
            + toString(this._ldv_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._dv_ == child)
        {
            this._dv_ = null;
            return;
        }

        if(this._vir_ == child)
        {
            this._vir_ = null;
            return;
        }

        if(this._ldv_ == child)
        {
            this._ldv_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._dv_ == oldChild)
        {
            setDv((PDv) newChild);
            return;
        }

        if(this._vir_ == oldChild)
        {
            setVir((TVir) newChild);
            return;
        }

        if(this._ldv_ == oldChild)
        {
            setLdv((PLdv) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
