/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ALLdvo2 extends PLdvo2
{
    private PLdvo _ldvo_;
    private TPvir _pvir_;
    private PLdvo2 _ldvo2_;

    public ALLdvo2()
    {
        // Constructor
    }

    public ALLdvo2(
        @SuppressWarnings("hiding") PLdvo _ldvo_,
        @SuppressWarnings("hiding") TPvir _pvir_,
        @SuppressWarnings("hiding") PLdvo2 _ldvo2_)
    {
        // Constructor
        setLdvo(_ldvo_);

        setPvir(_pvir_);

        setLdvo2(_ldvo2_);

    }

    @Override
    public Object clone()
    {
        return new ALLdvo2(
            cloneNode(this._ldvo_),
            cloneNode(this._pvir_),
            cloneNode(this._ldvo2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALLdvo2(this);
    }

    public PLdvo getLdvo()
    {
        return this._ldvo_;
    }

    public void setLdvo(PLdvo node)
    {
        if(this._ldvo_ != null)
        {
            this._ldvo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ldvo_ = node;
    }

    public TPvir getPvir()
    {
        return this._pvir_;
    }

    public void setPvir(TPvir node)
    {
        if(this._pvir_ != null)
        {
            this._pvir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pvir_ = node;
    }

    public PLdvo2 getLdvo2()
    {
        return this._ldvo2_;
    }

    public void setLdvo2(PLdvo2 node)
    {
        if(this._ldvo2_ != null)
        {
            this._ldvo2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ldvo2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._ldvo_)
            + toString(this._pvir_)
            + toString(this._ldvo2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._ldvo_ == child)
        {
            this._ldvo_ = null;
            return;
        }

        if(this._pvir_ == child)
        {
            this._pvir_ = null;
            return;
        }

        if(this._ldvo2_ == child)
        {
            this._ldvo2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._ldvo_ == oldChild)
        {
            setLdvo((PLdvo) newChild);
            return;
        }

        if(this._pvir_ == oldChild)
        {
            setPvir((TPvir) newChild);
            return;
        }

        if(this._ldvo2_ == oldChild)
        {
            setLdvo2((PLdvo2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
